# Generated by Django 4.2 on 2023-05-04 11:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Actor",
            fields=[
                ("actor_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(blank=True, max_length=20, null=True)),
                ("last_name", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "actor",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Administrator",
            fields=[
                ("admin_id", models.AutoField(primary_key=True, serialize=False)),
                ("account_name", models.CharField(max_length=100)),
                ("password", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "administrator",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Cinema",
            fields=[
                ("cinema_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=70)),
                ("address", models.CharField(max_length=40)),
                ("phone", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "cinema",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Director",
            fields=[
                ("director_id", models.AutoField(primary_key=True, serialize=False)),
                ("first_name", models.CharField(blank=True, max_length=20, null=True)),
                ("last_name", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "director",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Film",
            fields=[
                ("film_id", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=255)),
                ("release_time", models.DateField()),
                ("length", models.IntegerField()),
                ("synopsis", models.TextField()),
                ("image", models.TextField()),
            ],
            options={
                "db_table": "film",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="FilmLanguage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("language", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "film_language",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="FilmRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("region", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "film_region",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="FilmStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "film_status",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="FilmType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "film_type",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Hall",
            fields=[
                ("hall_id", models.AutoField(primary_key=True, serialize=False)),
                ("hall_num", models.CharField(max_length=20)),
                ("capacity", models.IntegerField()),
                (
                    "cinema",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="login.cinema",
                    ),
                ),
            ],
            options={
                "db_table": "hall",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="HallType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "hall_type",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Session",
            fields=[
                ("session_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("price", models.IntegerField()),
                (
                    "film",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="login.film"
                    ),
                ),
                (
                    "hall",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="login.hall"
                    ),
                ),
            ],
            options={
                "db_table": "session",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("user_id", models.AutoField(primary_key=True, serialize=False)),
                ("account_name", models.CharField(max_length=100)),
                ("password", models.CharField(max_length=100)),
                ("avatar", models.CharField(blank=True, max_length=255, null=True)),
                ("reward_points", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "user",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="UserReports",
            fields=[
                (
                    "report_id",
                    models.AutoField(
                        db_column="Report_ID", primary_key=True, serialize=False
                    ),
                ),
                ("reporter_id", models.PositiveIntegerField(db_column="Reporter_ID")),
                ("reportee_id", models.PositiveIntegerField(db_column="Reportee_ID")),
                ("film_id", models.IntegerField()),
                ("category", models.TextField(db_column="Category")),
                (
                    "comment",
                    models.TextField(blank=True, db_column="Comment", null=True),
                ),
                ("report_date", models.DateTimeField(db_column="Report_Date")),
            ],
            options={
                "db_table": "user_reports",
                "managed": True,
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                ("ticket_id", models.AutoField(primary_key=True, serialize=False)),
                ("seat_num", models.IntegerField()),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="login.session",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="login.user"
                    ),
                ),
            ],
            options={
                "db_table": "ticket",
                "managed": True,
            },
        ),
        migrations.AddField(
            model_name="hall",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to="login.halltype"
            ),
        ),
        migrations.AddField(
            model_name="film",
            name="language",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to="login.filmlanguage"
            ),
        ),
        migrations.AddField(
            model_name="film",
            name="region",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to="login.filmregion"
            ),
        ),
        migrations.AddField(
            model_name="film",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to="login.filmstatus"
            ),
        ),
        migrations.AddField(
            model_name="film",
            name="type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.DO_NOTHING, to="login.filmtype"
            ),
        ),
        migrations.CreateModel(
            name="UserPhone",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="login.user",
                    ),
                ),
                ("phone", models.BigIntegerField()),
            ],
            options={
                "db_table": "user_phone",
                "managed": True,
                "unique_together": {("user", "phone")},
            },
        ),
        migrations.CreateModel(
            name="UserReviews",
            fields=[
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="login.user",
                    ),
                ),
                ("review_date", models.DateTimeField()),
                ("rating", models.IntegerField()),
                ("comment", models.TextField()),
                (
                    "film",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="login.film"
                    ),
                ),
            ],
            options={
                "db_table": "user_reviews",
                "managed": True,
                "unique_together": {("user", "film")},
            },
        ),
        migrations.CreateModel(
            name="Direct",
            fields=[
                (
                    "film",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="login.film",
                    ),
                ),
                (
                    "director",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="login.director",
                    ),
                ),
            ],
            options={
                "db_table": "direct",
                "managed": True,
                "unique_together": {("film", "director")},
            },
        ),
        migrations.CreateModel(
            name="Act",
            fields=[
                (
                    "film",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        primary_key=True,
                        serialize=False,
                        to="login.film",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING, to="login.actor"
                    ),
                ),
            ],
            options={
                "db_table": "act",
                "managed": True,
                "unique_together": {("film", "actor")},
            },
        ),
    ]
